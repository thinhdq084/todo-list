[{"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\App.js":"1","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\reportWebVitals.js":"2","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\index.js":"3","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\InCompleted.js":"4","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\Completed.js":"5","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\TodoItem.js":"6","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\Services\\TodoServices.js":"7","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\Header.js":"8","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\AddNewTask.js":"9"},{"size":2818,"mtime":1610792241705,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608647502257,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1608647502257,"results":"13","hashOfConfig":"11"},{"size":991,"mtime":1610789439504,"results":"14","hashOfConfig":"11"},{"size":974,"mtime":1610789447587,"results":"15","hashOfConfig":"11"},{"size":1791,"mtime":1610789336108,"results":"16","hashOfConfig":"11"},{"size":1705,"mtime":1610786786576,"results":"17","hashOfConfig":"11"},{"size":794,"mtime":1610892147180,"results":"18","hashOfConfig":"11"},{"size":1058,"mtime":1610892082128,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"17gjnz7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\App.js",["40"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport InCompleted from \"./components/InCompleted\";\nimport Completed from \"./components/Completed\";\nimport Header from \"./components/Header\";\nimport {\n  getTodoList,\n  addNewTask,\n  changeTaskStatus,\n  changeTaskFavourite,\n} from \"./Services/TodoServices\";\n\nfunction App() {\n  let [listTasks, setTask] = useState([]);\n  const [reLoadCount, setReloadCount] = useState(0);\n  const [isLoading, setLoading] = useState(true);\n  const [isError, setError] = useState(false);\n\n  useEffect(async () => {\n    try {\n      setError(false);\n      // setLoading(true);\n      setTask((await getTodoList()).data);\n    } catch {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  }, [reLoadCount]);\n\n  let addTask = async (name) => {\n    try {\n      setError(false);\n      if (name === \"\") {\n        alert(\"Please enter Task name.\");\n      } else {\n        await addNewTask(name);\n      }\n    } catch {\n      setError(true);\n    } finally {\n      setLoading(false);\n      setReloadCount(reLoadCount + 1);\n    }\n  };\n\n  let removeTask = (taskId) => {\n    let tasks = listTasks.filter((task) => task.id !== taskId);\n    setTask(tasks);\n  };\n\n  let onStatusChanged = async (isCompleted, taskId) => {\n    try {\n      setError(false);\n      await changeTaskStatus(taskId, isCompleted);\n    } catch {\n      setError(true);\n    } finally {\n      setReloadCount(reLoadCount + 1);\n      setLoading(false);\n    }\n  };\n\n  let onFavoriteChanged = async (isFavorite, taskId) => {\n    try {\n      setError(false);\n      await changeTaskFavourite(taskId, isFavorite);\n    } catch {\n      setError(true);\n    } finally {\n      setReloadCount(reLoadCount + 1);\n      setLoading(false);\n    }\n  };\n\n  const content = () => {\n    return isError ? (\n      <div align=\"center\">\n        <div>Lỗi rồi</div>\n        <button\n          onClick={() => {\n            setReloadCount(reLoadCount + 1);\n            setLoading(true);\n            setError(false);\n          }}\n        >\n          Reload\n        </button>\n      </div>\n    ) : isLoading ? (\n      \"Loading....\"\n    ) : (\n      <main>\n        <Header addNewTask={addTask} />\n        <section className=\"container\">\n          <InCompleted\n            tasks={[...listTasks.filter((task) => !task.isCompleted)]}\n            removeTask={removeTask}\n            onStatusChanged={onStatusChanged}\n            onFavoriteChanged={onFavoriteChanged}\n          />\n          <Completed\n            tasks={[...listTasks.filter((task) => task.isCompleted)]}\n            removeTask={removeTask}\n            onStatusChanged={onStatusChanged}\n            onFavoriteChanged={onFavoriteChanged}\n          />\n        </section>\n      </main>\n    );\n  };\n  return <div className=\"App\">{content()}</div>;\n}\n\nexport default App;\n","D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\reportWebVitals.js",[],"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\index.js",[],["41","42"],"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\InCompleted.js",[],"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\Completed.js",[],"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\TodoItem.js",["43"],"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\Services\\TodoServices.js",[],"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\Header.js",[],"D:\\Hoc ReactJS\\BaiTap\\todo-list\\src\\components\\AddNewTask.js",[],{"ruleId":"44","severity":1,"message":"45","line":19,"column":13,"nodeType":"46","endLine":29,"endColumn":4},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":35,"column":11,"nodeType":"53","endLine":35,"endColumn":23},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-native-reassign",["54"],"no-negated-in-lhs",["55"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]